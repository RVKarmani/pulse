services:
  traefik:
    image: "traefik:v3.4"
    container_name: "traefik"
    network_mode: "host"
    command:
      #- "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--providers.file.watch=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./dynamic.yml:/etc/traefik/dynamic.yml:ro"
  
  ngrok:
    container_name: "ngrok"
    image: ngrok/ngrok:latest
    restart: unless-stopped
    network_mode: "host"
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
  
  feldera:
    container_name: "feldera"
    image: ghcr.io/feldera/pipeline-manager:latest
    restart: unless-stopped
    ports:
      - 9090:8080
  
  neo4j:
    container_name: "neo4j-apoc"
    network_mode: "host"
    image: neo4j
    restart: unless-stopped
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled= true
      - NEO4J_apoc_import_file_use__neo4j__config=true 
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_AUTH=none
